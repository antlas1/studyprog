site_name: Курс "Основы прикладного программирования"


theme:
  name: 'material'
  language: 'ru'
  
plugins: []
#extra:
#  search:
#    language: 'en, ru'
  
nav:
    - Главная: index.md
    - Курс Python:
        - Установка программного обеспечения: course_py/install.md
        - 1. Основы процедурного программирования:
            - 1.1. Введение: course_py/p1/t1.md
            - 1.2. Целое число: course_py/p1/t2.md
            - 1.3. Вещественное число: course_py/p1/t3.md
            - 1.4. Строковый тип данных: course_py/p1/t4.md
            - 1.5. Переменные, присваивание: course_py/p1/t5.md
            - 1.6. Логический тип данных: course_py/p1/t6.md
            - 1.7. Знакомство с оператором ветвления if в Python: course_py/p1/t7.md
            - 1.8. Блоки ветвления else-elif - более глубокое изучение if: course_py/p1/t8.md
            - 1.9. Вложенные условные операторы: course_py/p1/t9.md
            - 1.10. Цикл с параметром for: course_py/p1/t10.md
            - 1.11. Цикл while: course_py/p1/t11.md
            - 1.12. Условные конструкции в циклах: course_py/p1/t12.md
            - 1.13. Встроенные функции: course_py/p1/t13.md
            - 1.14. Пользовательские функции: course_py/p1/t14.md
            - 1.15. Курсовая работа: course_py/p1/t15.md
            - 1.16. Курсовая работа-2: course_py/p1/t16.md
        - 2. Сложные типы данных:
            - 2.1. Представление о списках: course_py/p2/t1.md
            - 2.2. Операции со списками: course_py/p2/t2.md
            - 2.3. Типовые алгоритмы обработки списков: course_py/p2/t3.md
            - 2.4. Строки, расширенная работа: course_py/p2/t4.md
            - 2.5. Алгоритмы на строках: course_py/p2/t5.md
            - 2.6. Кортежи: course_py/p2/t6.md
            - 2.7. Множества: course_py/p2/t7.md
            - 2.8. Словари: course_py/p2/t8.md
    - Задачи:
        - 1. Основы процедурного программирования:
            - 1.1. Редактор, запуск кода: tasks/p1/t1.md
            - 1.2. Целое число: tasks/p1/t2.md
            - 1.3. Вещественное число: tasks/p1/t3.md
            - 1.4. Строковый тип данных: tasks/p1/t4.md
            - 1.5. Переменные, присваивание: tasks/p1/t5.md
            - 1.6. Логический тип данных: tasks/p1/t6.md
            - 1.7. Знакомство с оператором ветвления if в Python: tasks/p1/t7.md
            - 1.8. Блоки ветвления else-elif - более глубокое изучение if: tasks/p1/t8.md
            - 1.9. Вложенные условные операторы: tasks/p1/t9.md
            - 1.10. Цикл с параметром for: tasks/p1/t10.md
            - 1.11. Цикл while: tasks/p1/t11.md
            - 1.12. Условные конструкции в циклах: tasks/p1/t12.md
            - 1.13. Встроенные функции: tasks/p1/t13.md
            - 1.14. Пользовательские функции: tasks/p1/t14.md
            - 1.15. Курсовая работа: tasks/p1/t15.md
            - 1.16. Курсовая работа-2: tasks/p1/t16.md
        - 2. Сложные типы данных:
            - 2.1. Представление о списках: tasks/p2/t1.md
            - 2.2. Операции со списками: tasks/p2/t2.md
            - 2.3. Типовые алгоритмы обработки списков: tasks/p2/t3.md
            - 2.4. Строки, расширенная работа: tasks/p2/t4.md
            - 2.5. Алгоритмы на строках: tasks/p2/t5.md
            - 2.6. Кортежи: tasks/p2/t6.md
            - 2.7. Множества: tasks/p2/t7.md
            - 2.7. Словари: tasks/p2/t8.md
    - Технические статьи:
        - Шпаргалка по Markdown: tech/cheatsheet.md
        - Выкладывание на Github pages: tech/deploy.md
        - Семантический конспект: tech/semantic.md
        - Процедурная модель: tech/procedural.md
        - Выпускные задачи: tech/fl.md
        - Курс Flowgoritm (не поддерживается):
            - Установка программного обеспечения: course_flow/prep/install.md
            - 1. Основы алгоритмизации и программирования:
                - 1.1. Алгоритм и блок-схема: course_flow/p1/t1.md
                - 1.2. Переменные и константы: course_flow/p1/t2.md
                - 1.3. Основные операции с переменными: course_flow/p1/t3.md
        - Для генераторов:
            - _: tech/coding_tasks.md

markdown_extensions:
    - tables
    - admonition
    - attr_list
    - pymdownx.details
    - pymdownx.emoji
    - pymdownx.mark
    - pymdownx.caret
    - pymdownx.arithmatex:
        generic: true
    - pymdownx.superfences:
        custom_fences:
           - name: mermaid
             class: mermaid
             format: !!python/name:pymdownx.superfences.fence_div_format
             
extra_css:
  - mermaid/mermaid.css
  - katex/katex.min.css
extra_javascript:
  - mermaid/mermaid.min.js
  - katex/mkdocs_load.js
  - katex/katex.min.js
    